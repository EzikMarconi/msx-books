
МИКРОКОМПЬЮТЕР Yamaha MSX-2

                   Книга 1








      К.И.Фахрутдинов,
      И.И.Бочаров


 АРХИТЕКТУРА И УСТРОЙСТВА
МИКРОКОМПЬЮТЕРОВ СТАНДАРТА
          MSX-2
 


МИКРОКОМПЬЮТЕР Yamaha MSX-2

В трех книгах






      К.И.Фахрутдинов,
      И.И.Бочаров


 АРХИТЕКТУРА И УСТРОЙСТВА
МИКРОКОМПЬЮТЕРОВ СТАНДАРТА
          MSX-2












Владивосток
Издательство Дальневосточного университета
1993
 

ББК
    
УДК 681.325.5-181.4


    Рекомендовано комитетом народного образования Приморского
    края в качестве практического пособия

                            Рецензенты:
      Лаборатория информатики Института повышения квалификации
      учителей (зав. лаб.                                    ),
                 
      
      

                       Печатается по решению
               редакционно-издательского совета ДВГУ



        Фахрутдинов К.И., Бочаров И.И.
           Микрокомпьютер Yamaha MSX-2: Практ. пособие: В 3-х кни-
        гах/ Кн.1: Архитектура и устройства микрокомпьютеров стан-
        дарта MSX-2.- Владивосток:  Издательство Дальневосточного
        университета, 1993.- 146 с.
           ISBN 

            В  учебном  пособии  рассмотрены   общие   структурные
         свойства  и   особенности   архитектуры   микрокомпьютера
         стандарта    MSX-2,    описаны    микропроцессор     Z80,
         видеопроцессор,      программируемый      звукогенератор,
         организация различных типов памяти и видеопамяти, форматы
         памяти на магнитных дисках  и  лентах,  энергонезависимая
         память и другие устройства системы.
            В приложениях приводится информация,  необходимая  при
         работе   на   компьютере,   и   в   особенности   -   для
         программирующих на языке ассемблера Z80 или  INTEL8080  в
         системе MSX-2.
            Книга будет полезна всем, кто работает, преподает  или
         учится на компьютерах YAMAHA MSX-1, MSX-2 и их аналогах.

          
──────────                                               ББК 
       

ISBN 
                                                   C  Издательство
                                     Дальневосточного университета
                                                              1993
 














                   МИКРОКОМПЬЮТЕР Yamaha MSX-2
                          В трех книгах
                                
                             Книга 1
                                
                                
                        К.И.Фахрутдинов,
                           И.И.Бочаров
                                
                    АРХИТЕКТУРА И УСТРОЙСТВА
                   МИКРОКОМПЬЮТЕРОВ СТАНДАРТА
                              MSX-2
                                
                                
                     Редактор  И.А. Пяткова
              Художественный редактор О.П. Крайнов
                 Технический редактор И.В. Шпинь
                     Корректор Л.П. Конарева







                                

















                            ИБ N 

Подписано в печать   .  .199  .Формат 60x84/16. Бумага тип N 3.
Усл. печ. л.   ,   . Уч.-изд. л.   ,  . Тираж       экз.
Цена      р.  Заказ

         Издательство Дальневосточного университета,
         690600, г. Владивосток, ул. Октябрьская, 27
         Полиграфический комбинат Управления издательств,
         полиграфии и книжной торговли Приморского крайисполкома
         690600, г. Владивосток, Океанский проспект, 69






                               
 



                   ВВЕДЕНИЕ

   Прошло  уже  более  пяти  лет  с   тех   пор,   как   различная
вычислительная техника стала широко внедряться в  средние  учебные
заведения. Приморский край занял одно из ведущих мест в стране  по
компьютеризации школы. Накоплен большой опыт и различные материалы
по  обучению  информатике  и  другим  предметам  и  по  разработке
программного обеспечения для школьных компьютеров.
   Классы   компьютеров   YAMAHA   MSX-1   и   MSX-2    достаточно
распространены  в  стране  и  крае,  однако   хорошей   и   полной
технической  документации  по  этой  системе   очень   мало.   Это
сдерживает разработку программного обеспечения.
   В  предлагаемом  Вашему  вниманию  учебном  пособии  собраны  и
систематизированы многие полезные сведения об  архитектуре  MSX-2.
Большинство источников информации  о  системе  труднодоступны  для
пользователей,  часть  источников,  к  сожалению  -   неизвестного
авторам происхождения.
   В   приложениях   приводится   информация,   необходимая    для
программирующих на языке ассемблера Z80 или INTEL8080  -  описание
рабочих областей BDOS и  BIOS,  портов  ввода/вывода,  подпрограмм
BIOS, BDOS и интерпретатора языка  MSX-BASIC,  сетевых  функций  и
регистров видеопроцессора.
   Во второй нашей книге описан язык ассемблера  Z80.  На  большом
количестве примеров показано, как  можно,  программируя  на  языке
ассемблера,   управлять   работой   всех   устройств   компьютера,
рассмотренных в той книге, что сейчас перед Вами.
   Материалы  книг  использовались  при  обучении  школьников   по
специальности    "Программирование",    переподготовке    учителей
информатики,  в  спецкурсах  по  архитектуре  микрокомпьютеров  на
математическом факультете Дальневосточного университета.
   Авторы благодарны  Д.В.Симончику,  который  внимательно  изучил
рукопись и сделал ряд ценных замечаний и поправок.


                                3  

           1. Общие сведения об архитектуре MSX-2

   Система MSX является  стандартом  восьмиразрядного  (школьного)
компьютера. Она появилась осенью 1983 г., а к декабрю 1985 г. было
продано более миллиона компьютеров MSX.
   Система MSX-2 была объявлена в мае 1985  г.  Она  имеет  полную
совместимость снизу вверх с MSX (MSX-1).
   В СССР были поставлены классы  учебной  вычислительной  техники
КУВТ  (MSX)   и   КУВТ-2   (MSX-2),   объединенные   в   локальные
вычислительные  сети,  которые   комплектовались,   в   частности,
компьютерами учителя "YAMAHA yis805/128" и  компьютерами  учеников
"YAMAHA yis503/III" для КУВТ-2 и компьютерами  "YAMAHA  yis503/II"
для КУВТ.

         Основные устройства системы MSX:
1. Микропроцессор (CPU) Z-80A;
2. Видеопроцессор (VDP) V9938 MSX VIDEO (совместимый  с  TMS-9918A
   в MSX-1);
3. Микросхемы периферийного  программируемого параллельного интер-
   фейса (PPI) Intel 8255 и последовательного  интерфейса RS 232C;
4. Программируемый генератор звуков (PSG) AY-2-8910;
5. Память:
                                MSX         MSX-2
         MSX BASIC, BIOS (ROM)  32K           48K
         Оперативная (RAM)      64K          128K
         Видео (VRAM)           16K          128K
         Видео для регистров
           ввода/вывода (ERAM)   -            64K
         Сетевая (NROM)         16K           32К
         Сетевая (NRAM)          -             2K
 6. Порты ввода/вывода;
 7. Шины данных, адреса, управления;
 8. Клавиатура;
 9. Печатающее  устройство  (принтер)  "GEMINI-10XR/15XR"   или
    "NL-10", либо любой другой MSX-принтер.
10. Дисководы для флоппи-дисков MF-2DD (MF-1DD);
11. Мышь;
12. Джойстик;
13. Плоттер;
14. Магнитофон.
                                4  

   Кроме  этого,  стандартные  устройства  MSX  включают  в   себя
драйверы   лазерных   дисков,   VTR,   контроллеры   синтезаторов,
видеосистемы, контроллеры роботов, температуры, различные адаптеры
для модемов и телефонных линий.
   Функциональную  схему  системы  можно   представить   следующим
образом:
 T16 >
Память   Процессор   Порты  Устройства           Устройства

            ┌─────────────────┬──────┐
            │                 │      │
            │         ┌─┐ ┌───┴────┐ │        ┌────────────┐
            │      ┌──┤ ├─┤ Маппер │ │        │ Клавиатура │
            │      │  └─┘ └────────┘ │        │ Магнитофон │
            │      │  ┌─┐  Периферийный       │ Индикаторы │
            │      ├──┤ ├─ интерфейс (PPI)  ──┤ Динамик    │
 ┌─────┐    │      │  └─┘                     │ Мышь       │
 │ RAM ├─┐  │      │  ┌─┐                     │ Джойстик   │
 └─────┘ ├──┘      ├──┤ ├─  ...  ...          │ Часы       │
 ┌─────┐ │ ┌─────┐ │  └─┘                     └────────────┘
 │ ROM ├─┤ │     │ │  ┌─┐ ┌─────────┐
 └─────┘ │ │ CPU │ ├──┤ ├─┤ Принтер │         ┌────────────┐
         ├─┤ Z80 ├─┤  └─┘ └─────────┘         │  Таймер    │
┌──────┐ │ │     │ │  ┌─┐                     ├────────────┤
│ NRAM ├─┤ │     │ ├──┤ ├─ RS232C ────────────┤ Компьютеры │
└──────┘ │ └─────┘ │  └─┘                     └────────────┘
┌──────┐ ├──┐      │  ┌─┐ ┌──────────────┐    ┌──────┐
│ NROM ├─┘  │      ├──┤ ├─┤Видеопроцессор├──┬─┤ VRAM │
└──────┘    │      │  └─┘ └──────────────┘  │ └──────┘
            │      │  ┌─┐                   │ ┌──────┐
            │      ├──┤ ├─  ...  ...        ├─┤ ERAM │
            │      │  └─┘                   │ └──────┘
            │      │                        │ ┌───────┐
            │      │                        └─┤Дисплей│
            │      │                          └───────┘
            │      │  ┌─┐ ┌───────────────┐      ┌─────────┐
            │      └──┤ ├─┤ Звукогенератор├──────┤ Динамик │
            │         └─┘ └───────────────┘      └─────────┘
            │    ┌──────────┐                     ┌──────────┐
            └────┤ Драйверы ├─────────────────────┤ Дисковод │
                 └──────────┘                     └──────────┘

   Основное устройство системы - микропроцессор Z-80. Он выполняет
все арифметические, логические и управляющие  операции.  Подробнее
его характеристики будут рассмотрены ниже.  При  работе  процессор
обменивается данными с памятью или с устройствами ввода/вывода.
   Видеопроцессор  управляет  выводом   на   экран   текстовой   и
графической информации.
   Системные  шины   представляют   собой   набор   соединительных
проводников-линий,   объединяющих    одноименные    выводы    всех
периферийных модулей. По каждой линии может быть передано значение
одного разряда двоичного кода. По роду передаваемой информации все
линии разделены  на  три  группы,  образующие  шину  данных,  шину
адресов и шину управления.
   Характерной    особенностью    шины    данных    является    ее
двунаправленность  (т.е.  возможность  передачи  данных  в  разные
моменты времени в различных направлениях).
                                5  

   Периферийными устройствами ЭВМ являются различные  запоминающие
устройства и регистры для подключения внешних устройств (например,
клавиатуры,   видеопроцессора   и   т.д.),   называемые    портами
ввода/вывода.  Поскольку  микропроцессор   Z-80   предназначен   в
основном  для  обработки   8-разрядных   двоичных   чисел,   порты
ввода/вывода тоже 8-разрядные.
   Микропроцессор Z-80 позволяет подключить к шинам адресов до 256
портов ввода/вывода.
   Запоминающее устройство ЭВМ состоит из набора 8-разрядных ячеек
памяти. Обмен данных между процессорными и периферийными  модулями
ЭВМ происходит по шине данных, также состоящей из 8 линий.
   Каждая ячейка памяти и  каждый  порт  ввода/вывода  имеют  свои
индивидуальные  номера  -  адреса.  Число  линий   адресной   шины
определяется разрядностью адресной  шины  микропроцессора  Z-80  и
равно 16. Это позволяет обращаться к 2 в 16 степени (64К)  ячейкам
памяти. Число К=1024  байт  является  одной  из  единиц  измерения
объема памяти.

                  2. Микропроцессор Z-80

   Ядром   компьютеров   стандартов   MSX   и    MSX-2    является
микропроцессор Z80 (Z80А), который был  разработан  фирмой  Zilog.
Эта фирма была создана специалистами, принимавшими ранее участие в
разработках   микропроцессоров   фирмы   Intel.   В   Японии   эта
микропроцессорная серия выпускается фирмой Sharp.
   Микропроцессор  Z80  представляет  собой  большую  интегральную
схему (БИС)  с  8500  транзисторами  на  кристаллической  пластине
площадью   4.6╬ 4.9  мм¤.   Его   архитектура    основывается   на
архитектурных принципах  микропроцесора  INTEL  8080  и  позволяет
выполнять  все  78  команд  этого  микропроцессора,  а  также   80
дополнительных команд (696 кодов операций в отличие от  244  кодов
INTEL8080). Основные особенности архитектуры Z80 приводятся в [5].
   Микропроцессор  Z80  имеет  восьмиразрядную   шину   данных   и
шестнадцатиразрядную шину адреса. Тактовая частота примерно 3.5795
MHz. Микропроцессор имеет 17 внутренних регистров. Предусмотрены 3
способа реакции на прерывания.  Имеется  второй  набор  из  восьми
8-разрядных  регистров,  которые  соответствуют  восьми  регистрам
микропроцессора INTEL 8080.
                                6  

   Основные технические характеристики микропроцессора Z80:
      Число выводов корпуса ............................... 40,48
      Напряжение питания, V ...............................    +5
      Максимальная потребляемая мощность, Wt ..............   1.1
      Основная тактовая частота, МHz ......................   3.5
      Непосредственно адресуемое пространство, Kb .........    64
      Время выполнения безадресной команды, mcs ...........   1.6
      Число основных команд ...............................   158
      Число регистров общего назначения ...................    16
      Число уровней прерывания ............................     2

   Хотя Z80  является  восьмиразрядным  процессором,  его  система
команд   содержит   несколько   операций   и    для    работы    с
шестнадцатиразрядными данными.

                    п.1. Основные блоки

   Основной   блок  микропроцессора  Z80  -  арифметико-логическое
устройство (АЛУ, CPU) с регистром-аккумулятором A.
   В микропроцессоре Z80 повторены  все  регистры  микропроцессора
INTEL 8080 и дополнительно к его 8-разрядным регистрам A,B,C,D,E,H
и L имеются также A',B',C',D',E',H' и L' и еще несколько регистров
специального назначения. Эти дополнительные регистры включают  два
16-разрядных  индексных  регистра  (IX,IY),  8-разрядный   регистр
вектора прерываний (I) и 7-разрядный  регистр  регенерации  памяти
(R). Кроме того, имеется один 16-разрядный PC (счетчик  команд)  и
один 16-разрядный SP (указатель стека).
   Микропроцессор  Z80 имеет два идентичных  8-разрядных  флаговых
регистра F и F', в которых предусмотрены четыре проверяемых и  два
непроверяемых  флага.  Четыре  проверяемых  флага  -  это  признак
переноса, признак нуля, признак  отрицательного  числа  и  признак
четности/переполнения.
   Два непроверяемых бита - это признак  полупереноса  (аналогичен
дополнительному признаку переноса в микропроцессоре INTEL 8085)  и
признак   вычитания.   Последний   используется   для    коррекции
результатов  операций  с  двоично-десятичными   числами,   помогая
определить  вид  предыдущей  операции,  поскольку   для   операций
сложения и вычитания коррекция различна.
   Имеется дешифратор команд с регистром команд для хранения  кода
                                7  

операции, устройство управления и сигнализации,  схема  десятичной
коррекции.

          п.2. Состав, обозначение и назначение регистров

   Как  уже  говорилось,  в  микропроцессоре  Z80   повторены  все
регистры  микропроцессора  INTEL  8080  и  дополнительно   к   его
8-разрядным регистрам  A,B,C,D,E,H  и  L  имеются  также  регистры
A',B',C',D',E',H' и L'  и  еще  несколько  регистров  специального
назначения.

А               - аккумулятор, используется для хранения операнда,
                  с которым работает арифметико-логическое устрой-
                  ство микропроцессора.  Результат  работы  АЛУ по
                  окончанию обработки данных обычно вновь помещают
                  в регистр A;
F               - регистр признаков (флагов);
B,C,D,E,H,L     - регистры общего назначения;
АF,BC,DE,HL     - регистровые пары, образуются  регистрами
                  общего назначения;
AF',BC',DE',HL' - дополнительные регистровые пары;
IX,IY           - индексные регистры;
SP              - регистр-указатель стека;
PC              - регистр-счетчик команд;
I               - регистр вектора прерываний, используется
                  в режиме прерываний IM 2;
R               - семибитный счетчик адреса динамического ОЗУ
                  для регенерации.

   Регистр I  предназначен  для  хранения  старшего  байта  адреса
программы обработки прерываний в режиме обработки прерываний IM 2.
Младший же байт адреса программы обработки  прерываний  передается
по шине данных от устройства, вызвавшего прерывание.
   Регистр R предназначен для хранения  адреса  динамического  ОЗУ
для регенерации. Регенерация  памяти  -  восстановление  памяти  с
периодичностью, заданной в технических условиях на микросхемы ОЗУ.
Регенерация необходима в  случае  использования  в  вычислительных
устройствах  динамической  памяти,  в  структуру  которых   входят
напыленные   по    МОП-технологии    (Металл-Окисел-Полупроводник)
конденсаторы. Потеря зарядов  конденсаторов  происходит  из-за  их
                                8  

утечки, а также в результате обращения к памяти при считывании  из
нее информации.
   В   микропроцессоре   Z80   используется   способ   циклической
регенерации   памяти.   Во   время   цикла   выполнения    команды
микропроцессором   существуют   определенные   интервалы,    когда
системная  адресная  шина  свободна.   Эти   временные   интервалы
используются микропроцессором Z80 для  доступа  к  адресным  шинам
динамической памяти  ОЗУ.  В  качестве  адресов  в  данном  случае
используются  7  младших  разрядов  адресного   поля   процессора,
сопровождаемые специальным сигналом, сообщающим, что данный  адрес
является адресом регенерации памяти. Регистр  R  хранит  очередной
адрес регенерируемой строки памяти.

                п.3. Регистр признаков

   При выполнении микропроцессором  некоторых  команд  в  регистре
признаков F в зависимости от  результата  операции  вырабатываются
признаки (флаги) состояния. Кроме этого, часть команд не  изменяют
некоторые признаки, установленные предыдущими командами, а часть -
дают неопределенные значения признаков. В каждом конкретном случае
обращайтесь к описанию команд.
   Биты 3 и 5 регистра F получают значения 0 или 1  в  зависимости
от  выполняемых  операций   и  при  программировании   обычно   не
используются.
 T16 >
      ┌──────┬────┬────┬────┬────┬────┬────┬────┬────┐
      │ Бит  │  7 │  6 │  5 │  4 │  3 │  2 │  1 │  0 │
      ├──────┼────┼────┼────┼────┼────┼────┼────┼────┤
      │ Флаг │  S │  Z │  * │  H │  * │  V │  N │  C │
      └──────┴────┴────┴────┴────┴────┤  P ├────┴────┘
                                      └────┘

   Один и тот же бит (P/V) используется различными операциями либо
для   установки/сброса   флага   переполнения   (V),   либо    для
установки/сброса флага четности (P).
   Биты признаков результата (флаги) имеют следующие обозначения и
смысл:
S - (Sign) знак результата (1 - минус, 0 - плюс).  При  выполнении
    арифметических команд каждый двоичный  операнд  представляется
    как 7-разрядное число со знаком, записанным в старшем разряде.
    Единица в восьмом разряде соответствует отрицательному числу в
    дополнительном коде;
                                9  

Z - (Zero) устанавливается в 1, если результат равен 0. В командах
    сравнения и поиска устанавливается,  когда  результат   поиска
    положительный, в командах работы с  битами  загружается допол-
    нительным значением проверяемого бита;
H - (Half-Carry) равен 1, если  был  перенос  из  3  разряда  в  4
    (перенос полуслова),  иначе  сбрасывается  в  0;  обычно  этот
    признак используется при сложении  чисел  в двоично-десятичной
    форме;
V - (Overflow)  устанавливается    равным   1,    если   результат
    арифметической операции не вмещается  в  регистр  (т.е.  число
    больше 127 или меньше -128).
P - (Parity) становится равным 1, если количество  битов-единиц  в
    байте-результате  логической  операции   или   сдвигов   четно
    (например, 01010011), иначе - 0.
N - (Negative)  устанавливается  в  1  после  выполнения  операций
    вычитания и  сравнения  и  сбрасывается  в  0  после  операций
    сложения, логических операций и сдвигов.
C - (Carry)  флаг   устанавливается,  если   в  результате  команд
    вычитания или сравнения происходит заем бита, очищается  после
    логических  команд,  и  получает   значение   выдвинутого   за
    разрядную сетку бита в командах циклического сдвига.

                     п.4. Система и форматы команд

   Каждый  микропроцессор  характеризуется  определенной  системой
команд.  Система  команд  -  это  полный   перечень   элементарных
действий,  которые  способен  производить  процессор.  Управляемый
этими командами процессор выполняет очень простые действия, такие,
как элементарные арифметические и  логические  операции,  операции
пересылки данных, сравнения двух величин и  др.  Однако,  составив
программу    из    последовательности    таких    команд,    можно
запрограммировать выполнение достаточно сложного алгоритма.
   Команды и данные представляются  в  памяти  компьютера  в  виде
двоичных чисел. Часто, анализируя участок памяти, нельзя  отличить
данные от команд. Лишь  очень  немногие  из  возможных  комбинаций
битов в байте или байтов не могут быть восприняты как команда.
   Команда, как правило, состоит из двух частей: кода  операции  и
адреса или данных. Как уже было сказано, команда минимальной длины
занимает один байт. Часть байта отводится на код операции,  другая
часть   адресует   операнды.   Ими   могут   быть   один   разряд,
                                10  

восьмиразрядный регистр или  регистровая  пара.  Адреса  регистров
могут быть явно заданы в команде или  неявно  определены  по  коду
операции.
   Можно рассмотреть структуру  однобайтовой  команды  на  примере
команды  ADD.  Двоичный  код  команды  имеет  вид  10000XXX,   где
XXX-адрес 8-разрядного регистра в двоичном коде. Команда  ADD  A,C
имеет двоичный код 10000001, т.к. "адрес"  регистра  C  -  001,  а
команда ADD A,(HL) имеет код 1000110, поскольку косвенный  операнд
(HL) задается кодом 110.
   Команды, имеющие длину 2 байта - это команды с  непосредственно
заданными  операндами.  В  их  коде  вторым  байтом  всегда  будут
восьмиразрядные данные, которые участвуют  в  операции.  Например,
команда ADD A,34h представляется в памяти в шестнадцатеричном виде
как C6 34.
   Трехбайтные команды - это либо команды безусловной или условной
передачи управления, такие как JP или CALL,  в  которых  второй  и
третий байты интерпретируются как 16-разрядный адрес, либо команда
LD,  которая  загружает  непосредственные  16-разрядные  данные  в
регистровую пару или указатель стека.
   Самые  большие  по  длине  (4   байта)   -   это   команды   из
дополнительного набора.  Они  в  основном  работают  с  индексными
регистрами IX и IY, а также несколько расширяют возможности работы
с основными регистрами процессора.
   Естественно, что запомнить 696 кодов операций, представленных в
виде двоичных 8-разрядных  чисел,  т.е.  в  виде  набора  нулей  и
единиц,  практически  невозможно.  Поэтому  каждому  коду  команды
ставится  в  соответствие   мнемоническое   название   (мнемоника)
команды,  которая  является  сокращением   от   английских   слов,
описывающих ее действие. Мнемонический код команд позволяет  легче
запомнить их функции и значительно упрощает написание программ.
   Операнды в свою очередь удобнее записывать не в двоичной,  а  в
шестнадцатиречной системе счисления. Операнд может быть задан явно
в виде конкретного числа или неявно, т.е. ему может быть присвоено
символическое имя, а конкретное  значение,  соответствующее  этому
имени, определяется в дальнейшем при переводе текста  программы  в
машинные коды.
   Когда  операнд  задается   непосредственно,   то   после   него
проставляется буква B, D или H, если число  записано  в  двоичной,
десятичной или шестнадцатеричной системе счисления  соответственно
                                11  

(причем если явно система счисления не задана, то  считается,  что
число задано в десятичной системе).
   Если мы при составлении программы задаем операнды неявно, то  в
начале или в конце текста программы определяем, чему эти  операнды
равны на самом деле. Для этого используется  директива  ассемблера
EQU.

                       п.5. Способы адресации

   Для   правильного   программирования   важно   знать   принципы
адресации, которые заложены в  архитектуру  микропроцессоре,  т.е.
знать, как происходит формирование кода на шине адреса.
   При обращении к памяти для чтения  кода  очередной  команды  из
микропроцессора на шину данных поступает содержимое  16-разрядного
регистра PC, называемого  счетчиком  команд.  В  этом  регистре  к
моменту    окончания    выполнения    текущей    команды    всегда
подготавливается адрес очередной команды программы.
   Во  время  выполнения  программы  микропроцессор  обращается  к
заданным ячейкам памяти для чтения и записи промежуточных  данных.
В системе команд имеются команды, с помощью которых  можно  задать
адрес   обращения   к   памяти    непосредственно    (команды    с
непосредственной адресацией). Как уже отмечалось,  они  имеют  3-х
(либо  4-х)  байтовый  формат,  т.е.  каждая  команда  занимает  3
последовательно расположенные в памяти ячейки.  В  последних  двух
ячейках хранится 16-разрядный адрес обращения к памяти.
   При выполнении такой команды микропроцессор переписывает  адрес
во внутренние буферные регистры и затем при  обращении  к  памяти,
для записи или чтения данных передает из этих  регистров  на  шину
адресов 16-разрядный адрес.
   Команды с непосредственной адресацией выполняются  относительно
медленно, т.к. микропроцессору при их выполнении приходится дважды
обращаться к памяти для побайтового чтения кода адреса.
   В системе команд есть  также  команды,  использующие  косвенную
адресацию.  При  их   выполнении   адресация   осуществляется   по
содержимому одной из регистровых пар  BC,  DE,  HL  или  индексных
регистров IX, IY, куда предварительно помещается  адрес  требуемой
ячейки памяти и откуда он поступает на шину адресов.
   Кроме описанных 2-х способов адресации,  возможна  адресация  к
ячейкам  памяти  по   содержимому   16-разрядного   регистра   SP,
называемого указателем стека. Под стеком  в  микропроцессоре  Z-80
                                12  

понимается  любая  область  ОЗУ,  служащая  для  хранения  адресов
констант  и  промежуточных  данных,  адесация  к  ячейкам  которой
осуществляется с помощью указателя стека SP. Поместить  и  извлечь
данные  из  стека  можно  только  через  его  вершину,   поскольку
используется принцип LIFO - "последним пришел - первым вышел".
   С помощью команд, использующих стековую адресацию, в стек можно
переслать  16-разрядное  число  из  любой  регистровой  пары   или
регистра-счетчика команд PC.
   Запись числа в стек происходит побайтно:  сначала  записывается
старший байт в ячейку с адресом на 1 меньшим указателя стека (т.е.
в ячейку с адресом SP-1), затем - младший байт в ячейку с  адресом
SP-2. Таким образом,  по  окончании  записи  содержимое  указателя
стека становится равным SP-2 (т.е. при  занесении  в  стек  данных
указатель стека автоматически каждый раз  "смещается  вниз"  на  2
ячейки).
   В системе  команд  есть  и  такие  команды,  которые  позволяют
осуществлять обратную операцию.  В  этом  случае  указатель  стека
увеличивается на 2.
   Стек явно и неявно широко используется при программировании.  В
стек, например, помещается адрес возврата при вызове  подпрограмм,
в стеке удобно временно хранить данные из регистров,  т.к.  запись
содержимого пары  регистров  в  стек  и  извлечение  их  из  стека
осуществляется  однобайтовыми  (  или  при  работе  с   индексными
регистрами двухбайтовыми) командами.
   В заключение приведем краткий список способов адресации [5]:
   1. Непосредственная адресация.
      В этом режиме ячейка, следующая за кодом операции,  содержит
      операнд (8 бит).
   2. Расширенная непосредственная адресация.
      Ячейки, следующие за кодом операции,  содержат  16-разрядный
      операнд.
   3. Модифицированная адресация нулевой страницы.
      Имеется команда, называемая рестартом, которая  используется
      для инициирования перехода  на  подпрограмму  по  одному  из
      возможных  адресов  нулевой  страницы.  В  ячейках  с  этими
      адресами могут размещаться часто используемые  подпрограммы,
      доступ к которым может осуществляться с помощью однобайтовых
      команд.
                                13  

   4. Относительная адресация.
      В этом режиме задается однобайтовое смещение в диапазоне  от
      +127 до -128 относительно текущего адреса плюс 2,  что  дает
      возможность    обращения    к    расположенной    поблизости
      подпрограмме с помощью команды длиной 2  байта  и  позволяет
      создавать перемещаемые программы.
   5. Расширенная адресация.
      Полный   16-разрядный    адрес    назначения    определяется
      двухбайтовым  операндом.  Этим  способом  можно   обеспечить
      обращение  к  подпрограмме  или  переход  по  любому  адресу
      памяти.
   6. Индексная адресация.
      Смещение прибавляется к числу  в  одном  из  двух  индексных
      регистров, образуя действительный адрес памяти. Этот  способ
      полезен для работы с таблицами.
   7. Регистровая адресация.
      Код  операции  включает  в  себя   обозначение   конкретного
      регистра.
   8. Неявная адресация.
      Регистр    адреса,    например    аккумулятор,    однозначно
      определяется данной командой.
   9. Регистровая косвенная адресация.
      16-разрядная пара регистров,  например  HL,  содержит  адрес
      операнда.
  10. Побитовая адресация.
      Три разряда  кода  операции  определяют  конкретные  разряды
      ячейки памяти, над которым производится данная операция.

   Внимание! Для хранения  в  памяти  16-разрядному  числу  всегда
отводится 2 смежные ячейки. Запись чисел в эти  ячейки  происходит
побайтно, причем в ячейку с меньшим адресом  записывается  младший
байт, а в ячейку с большим адресом - старший байт  числа  (принцип
системы  INTEL).  Это  правило  выполняется  при  любых   способах
адресации.

                     п.6. Прерывания

   Микропроцессорные  устройства   и   микроЭВМ   наиболее   часто
работают в так называемом "режиме реального времени".  Этот  режим
характерен  тем,  что  события   во   внешнем   по   отношению   к
                                14  

микропроцессору  мире  происходят  в   различные   непредсказуемые
заранее моменты времени.
   Микропроцессор должен своевременно реагировать на  эти  события
независимо от того,  занят  ли  он  в  данный  момент  какими-либо
другими  действиями  или  нет.  Для  этого   имеется   возможность
прерывания работы текущей программы  по  специальным  сигналам  от
внешних устройств или датчиков - запрос прерывания (IRQ).
   При поступлении запроса прерывания микропроцессор  переходит  к
выполнению подпрограммы обработки  прерываний,  т.е.  к  действию,
являющемуся реакцией на внешнее событие.
   При   появлении   запроса   прерывания   микропроцессор   после
выполнения очередной команды текущей программы  считывает  не  код
операции следующей команды из памяти, как обычно,  а  код  команды
вызова  подпрограммы,  формируемый  на  шинах  данных  специальным
блоком - контроллером прерываний.
   Выполнение команды процессором состоит из нескольких циклов:
∙ Чтение и декодирование кода операции, восстановление DRAM;
∙ Операции чтения/записи из памяти, из портов ввода/вывода;
∙ Внутренняя   операция    микропроцессора,    обработка   запроса
прерывания  IRQ.  Если  запрос  прерывания  был   послан   внешним
устройством, берется код его операции и адресный вектор.
   Обычно  в  качестве  команд   вызова   подпрограмм   используют
однобайтовые команды RST 0  -  RST  7.  В  зависимости  от  номера
команды ее выполнение ведет к передаче управления на одну из ячеек
памяти  в   начальной   области   памяти   (см.   систему   команд
микропроцессора). Программы обработки прерываний обычно начинаются
с сохранения всех регистров в стеке:
       PUSH    hl
       PUSH    de
       PUSH    bc
       PUSH    af
       EXX
       EX      af,af'
       PUSH    hl
       PUSH    de
       PUSH    bc
       PUSH    af
       PUSH    iy
       PUSH    ix
       ...
                                15  

   В конце подпрограммы обычно выполняются следующие команды:
       ...
       POP ix     ; Стандартное завершение обработки прерывания
       POP iy
       POP af
       POP bc
       POP de
       POP hl
       EX  af,af'
       EXX
       POP af
       POP bc
       POP de
       POP hl
       EI
       RET

   С помощью команд чтения из стека  восстанавливается  содержимое
регистров микропроцессора, а затем выполняется команда  разрешения
прерываний EI.  Последнее  необходимо,  т.к.  после  возникновения
прерывания  в  микропроцессоре  всегда  автоматически  запрещается
прием запросов прерываний. Последняя команда производит возврат  в
основную программу.
   Возврат происходит в то место этой программы и с тем состоянием
внутренних  регистров,  которые  были  до  момента   возникновения
прерывания. Вместо команд EI и RET можно использовать одну команду
RETI (возврат из маскируемого прерывания)  или  RETN  (возврат  из
немаскируемого  прерывания),  выбор  которых   зависит   от   типа
прерывания.
   Процессор Z-80 предусматривает несколько режимов прерывания: 
   1. Немаскируемое прерывание (NMI).
      В этом случае выполняется рестарт  с  ячейки  0066h.  Запрос
      немаскируемого прерывания принимается  процессором  в  любой
      момент  времени.  Однако  в  системе  MSX  сигнал   NMI   не
      используется и данное прерывание никогда не происходит, хотя
      для его обработки имеется ловушка.
   2. Маскируемое прерывание (INT).
      Терминал прерывания  INT  получает  60  сигналов  таймера  в
      секунду. Существует в трех видах, каждый из которых доступен
      для программиста:
                                16  

      a) вид 0: прерывания этого типа возникают автоматически  при
         появлении  сигнала  RESET;  реакция  на  него   идентична
         реакции  на  прерывание   в   процессоре   INTEL   8080A.
         Прерывающее устройство может выдать любую команду на шину
         данных  (обычно   команду   рестарта   или   трехбайтовую
         перехода), и процессор выполнит ее;
      b) вид 1: этот вид прерывания инициирует  рестарт  с  ячейки
         0038h, подобно реакции  на немаскируемое прерывание, хотя
         и отличается адресом перехода; сигнал INT  от VDP появля-
         ется на входе процессора каждые 1/60 секунды NTSC.
      c) вид 2: при этом виде  прерываний  прерывающее  устройство
         посылает в процессор 8-разрядное слово, которое указывает
         адрес   стандартной   программы   обработки   прерываний,
         хранящейся в памяти  программ.  Старшие  восемь  разрядов
         этого адреса помещаются программистом в  регистр  I.  Это
         наиболее  эффективный  способ   организации   прерываний,
         поскольку  один  8-разрядный  аргумент  может  определять
         адрес подпрограммы, расположенной в любом месте памяти.

                    3. Порты ввода/вывода

   Как уже говорилось, порты  -  это  устройства  сопряжения,  при
помощи которых микропроцессор Z80 может обмениваться информацией с
другими микропроцессорами или устройствами.
   Порт   хранит   восьмиразрядное   значение   (байт)   и   может
использоваться для чтения информации, ее  записи,  или  и  того, и
другого.
   Порты с номерами 0-14 используются для работы с  сетью  RS232C,
90h-92h - для работы с принтером, 98h-9Bh  -  с  видеопроцессором,
A8h-ABh - для работы с параллельным интерфейсом PPI и т.д.
   Список портов приведен в Приложении 2  вместе с  дополнительной
информацией по работе с ними.

                    4. Организация памяти

   При программировании в системе MSX используется несколько типов
памяти:
     RAM - Random Access Memory, ОЗУ, память доступная для  чтения
           и  записи  (место,  где  хранятся  программы,   данные,
           системные переменные и стек);
                                17  

     ROM - Read Only  Memory,  ПЗУ,  доступна  только  для  чтения
           (здесь   хранится   программа    начальной    загрузки,
           интерпретатор  языка  BASIC,  подпрограммы  в  машинных
           кодах - BIOS). Информация в ПЗУ сохраняется  независимо
           от того, включен источник питания или выключен.
     VRAM - Video  RAM,  видеопамять  (для  хранения  текстовых  и
           графических изображений, спрайтов). При желании  в  ней
           можно разместить обычные данные, если не хватает RAM).
   Организация памяти типов RAM и ROM будет описана  ниже  в  этом
параграфе, а организация видеопамяти - в 6.

                       п.1. Карта памяти

   Компьютер  YIS503  имеет  16-разрядную  шину  адреса.   Поэтому
возможна адресация до 2^16 ячеек памяти, т.е. диапазон адресов  от
0  до  65535  (FFFFh).  Каждая  ячейка  памяти  хранит  один  байт
информации.
   В системе MSX весь объем памяти разделен на 4 блока  (страницы)
по 16K. Страницы имеют следующие интервалы адресов:
     0 стр.: 0000h - 3FFFh
     1 стр.: 4000h - 7FFFh
     2 стр.: 8000h - BFFFh
     3 стр.: C000h - FFFFh

   Каждой странице (и значит,  интервалу  адресов)  реально  может
соответствовать не один, а несколько блоков памяти.  Но  в  каждый
момент времени каждой странице соответствует один и только один из
блоков (слоев) этой страницы.
   В данной системе страница памяти может подключаться к одному из
четырех блоков.
   Карта и содержимое слоев (слотов) памяти приведены на Рис.4.1.
   Здесь использованы следующие обозначения:
BIOS    - ПЗУ с BIOS (стандартные подпрограммы ввода/вывода);
EBIOS   - расширенный BIOS (для MSX-2);
BASIC   - ПЗУ с интерпретатором языка MSX-BASIC;
BDOS    - ПЗУ встроенного дисковода консольной Ямахи MSX-2;
PAINTER - ПЗУ с  графическим  редактором  (только  для  консольной
          Ямахи MSX-2);
RAM     - оперативная память;
